// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using printSmart.data;

#nullable disable

namespace printSmart.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20220528004717_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("printSmart.Models.Categorium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("printSmart.Models.Cliente", b =>
                {
                    b.Property<long>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdCliente"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("printSmart.Models.Collectioncc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .IsRequired()
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int>("IdCostumer")
                        .HasColumnType("int")
                        .HasColumnName("id_costumer");

                    b.HasKey("Id");

                    b.HasIndex("IdCostumer");

                    b.ToTable("collectioncc", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Costumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Nit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nit");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("costumer", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Empleado", b =>
                {
                    b.Property<long>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdEmpleado"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEmpleado");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("printSmart.Models.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Maquina", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.MarcaMaquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MarcaMaquina", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.MarcaPc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MarcaPC", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.MarcaSuministro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MarcaSuministro", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"), 1L, 1);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<float?>("Valor")
                        .IsRequired()
                        .HasColumnType("real");

                    b.HasKey("IdPago");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("printSmart.Models.Paymentcc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int>("IdCostumer")
                        .HasColumnType("int")
                        .HasColumnName("id_costumer");

                    b.HasKey("Id");

                    b.HasIndex("IdCostumer");

                    b.ToTable("paymentcc", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Pc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DiscoDuro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pantalla")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProcesadorId")
                        .HasColumnType("int");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("SistemaOpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ProcesadorId");

                    b.HasIndex("SistemaOpId");

                    b.ToTable("PC", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Procesador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Procesador", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Reporte");
                });

            modelBuilder.Entity("printSmart.Models.Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Repuesto", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdClienteNavigationIdCliente")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdCustomerNavigarionId")
                        .HasColumnType("int");

                    b.Property<long?>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdEmpleadoNavigationIdEmpleado")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdTipoServ")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdTipoServNavigationIdTipoServ")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Viatico")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteNavigationIdCliente");

                    b.HasIndex("IdCustomerNavigarionId");

                    b.HasIndex("IdEmpleadoNavigationIdEmpleado");

                    b.HasIndex("IdTipoServNavigationIdTipoServ");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("printSmart.Models.ServicioRepuesto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<long?>("IdRepuesto")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdRepuestoNavigationId")
                        .HasColumnType("int");

                    b.Property<long?>("IdServicio")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdServicioNavigarionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRepuestoNavigationId");

                    b.HasIndex("IdServicioNavigarionId");

                    b.ToTable("ServicioRepuesto");
                });

            modelBuilder.Entity("printSmart.Models.ServicioSuministro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<long?>("IdServicio")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdServicioNavigarionId")
                        .HasColumnType("int");

                    b.Property<long?>("IdSuministro")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdSuministroNavigationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdServicioNavigarionId");

                    b.HasIndex("IdSuministroNavigationId");

                    b.ToTable("ServicioSuministro");
                });

            modelBuilder.Entity("printSmart.Models.SistemaOperativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SistemaOperativo", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Suministro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdTipo");

                    b.ToTable("Suministro", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.TipoServicio", b =>
                {
                    b.Property<long>("IdTipoServ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdTipoServ"), 1L, 1);

                    b.Property<float>("Costo")
                        .HasColumnType("real");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoServ");

                    b.ToTable("TipoServicio");
                });

            modelBuilder.Entity("printSmart.Models.TipoSuministro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoSuministro", (string)null);
                });

            modelBuilder.Entity("printSmart.Models.Collectioncc", b =>
                {
                    b.HasOne("printSmart.Models.Costumer", "IdCostumerNavigation")
                        .WithMany("Collectionccs")
                        .HasForeignKey("IdCostumer")
                        .IsRequired()
                        .HasConstraintName("FK_collectioncc_costumer");

                    b.Navigation("IdCostumerNavigation");
                });

            modelBuilder.Entity("printSmart.Models.Maquina", b =>
                {
                    b.HasOne("printSmart.Models.MarcaMaquina", "Marca")
                        .WithMany("Maquinas")
                        .HasForeignKey("MarcaId")
                        .IsRequired()
                        .HasConstraintName("FK__Maquina__MarcaId__6E01572D");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("printSmart.Models.Paymentcc", b =>
                {
                    b.HasOne("printSmart.Models.Costumer", "IdCostumerNavigation")
                        .WithMany("Paymentccs")
                        .HasForeignKey("IdCostumer")
                        .IsRequired()
                        .HasConstraintName("FK_paymentcc_costumer");

                    b.Navigation("IdCostumerNavigation");
                });

            modelBuilder.Entity("printSmart.Models.Pc", b =>
                {
                    b.HasOne("printSmart.Models.MarcaPc", "Marca")
                        .WithMany("Pcs")
                        .HasForeignKey("MarcaId")
                        .IsRequired()
                        .HasConstraintName("FK__PC__Marca__160F4887");

                    b.HasOne("printSmart.Models.Procesador", "Procesador")
                        .WithMany("Pcs")
                        .HasForeignKey("ProcesadorId")
                        .IsRequired()
                        .HasConstraintName("FK__PC__Procesador__0C85DE4D");

                    b.HasOne("printSmart.Models.SistemaOperativo", "SistemaOp")
                        .WithMany("Pcs")
                        .HasForeignKey("SistemaOpId")
                        .IsRequired()
                        .HasConstraintName("FK__PC__SistemaOp__0A9D95DB");

                    b.Navigation("Marca");

                    b.Navigation("Procesador");

                    b.Navigation("SistemaOp");
                });

            modelBuilder.Entity("printSmart.Models.Servicio", b =>
                {
                    b.HasOne("printSmart.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Servicio")
                        .HasForeignKey("IdClienteNavigationIdCliente");

                    b.HasOne("printSmart.Models.Costumer", "IdCustomerNavigarion")
                        .WithMany("Servicio")
                        .HasForeignKey("IdCustomerNavigarionId");

                    b.HasOne("printSmart.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Servicio")
                        .HasForeignKey("IdEmpleadoNavigationIdEmpleado");

                    b.HasOne("printSmart.Models.TipoServicio", "IdTipoServNavigation")
                        .WithMany("Servicio")
                        .HasForeignKey("IdTipoServNavigationIdTipoServ");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdCustomerNavigarion");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdTipoServNavigation");
                });

            modelBuilder.Entity("printSmart.Models.ServicioRepuesto", b =>
                {
                    b.HasOne("printSmart.Models.Repuesto", "IdRepuestoNavigation")
                        .WithMany("ServicioRepuesto")
                        .HasForeignKey("IdRepuestoNavigationId");

                    b.HasOne("printSmart.Models.Servicio", "IdServicioNavigarion")
                        .WithMany("ServicioRepuesto")
                        .HasForeignKey("IdServicioNavigarionId");

                    b.Navigation("IdRepuestoNavigation");

                    b.Navigation("IdServicioNavigarion");
                });

            modelBuilder.Entity("printSmart.Models.ServicioSuministro", b =>
                {
                    b.HasOne("printSmart.Models.Servicio", "IdServicioNavigarion")
                        .WithMany("ServicioSuministro")
                        .HasForeignKey("IdServicioNavigarionId");

                    b.HasOne("printSmart.Models.Suministro", "IdSuministroNavigation")
                        .WithMany("ServicioSuministro")
                        .HasForeignKey("IdSuministroNavigationId");

                    b.Navigation("IdServicioNavigarion");

                    b.Navigation("IdSuministroNavigation");
                });

            modelBuilder.Entity("printSmart.Models.Suministro", b =>
                {
                    b.HasOne("printSmart.Models.MarcaSuministro", "IdMarcaNavigation")
                        .WithMany("Suministros")
                        .HasForeignKey("IdMarca")
                        .IsRequired()
                        .HasConstraintName("FK__Suministr__IdMar__440B1D61");

                    b.HasOne("printSmart.Models.TipoSuministro", "IdTipoNavigation")
                        .WithMany("Suministros")
                        .HasForeignKey("IdTipo")
                        .IsRequired()
                        .HasConstraintName("FK__Suministr__IdTip__44FF419A");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("printSmart.Models.Cliente", b =>
                {
                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("printSmart.Models.Costumer", b =>
                {
                    b.Navigation("Collectionccs");

                    b.Navigation("Paymentccs");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("printSmart.Models.Empleado", b =>
                {
                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("printSmart.Models.MarcaMaquina", b =>
                {
                    b.Navigation("Maquinas");
                });

            modelBuilder.Entity("printSmart.Models.MarcaPc", b =>
                {
                    b.Navigation("Pcs");
                });

            modelBuilder.Entity("printSmart.Models.MarcaSuministro", b =>
                {
                    b.Navigation("Suministros");
                });

            modelBuilder.Entity("printSmart.Models.Procesador", b =>
                {
                    b.Navigation("Pcs");
                });

            modelBuilder.Entity("printSmart.Models.Repuesto", b =>
                {
                    b.Navigation("ServicioRepuesto");
                });

            modelBuilder.Entity("printSmart.Models.Servicio", b =>
                {
                    b.Navigation("ServicioRepuesto");

                    b.Navigation("ServicioSuministro");
                });

            modelBuilder.Entity("printSmart.Models.SistemaOperativo", b =>
                {
                    b.Navigation("Pcs");
                });

            modelBuilder.Entity("printSmart.Models.Suministro", b =>
                {
                    b.Navigation("ServicioSuministro");
                });

            modelBuilder.Entity("printSmart.Models.TipoServicio", b =>
                {
                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("printSmart.Models.TipoSuministro", b =>
                {
                    b.Navigation("Suministros");
                });
#pragma warning restore 612, 618
        }
    }
}
